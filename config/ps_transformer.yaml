# 配置文件: ps_transformer.yaml
# 描述: 使用图Transformer作为核心聚合模块的停车位检测模型配置

# ---------------------------------------------------------------------------- #
# 基本模型配置
# ---------------------------------------------------------------------------- #
model:
  name: 'point_based_detector'
  vgg: 'vgg16'  # 使用VGG16作为主干网络
  use_gnn: true # 启用图神经网络模块

  # -------------------------------------------------------------------------- #
  # 核心创新点: 图编码器配置
  # -------------------------------------------------------------------------- #
  graph_encoder:
    # 1. 将类型从 'GAT' 更改为 'GraphTransformer' 来启用新模型
    type: 'GraphTransformer'

    # 点特征编码器配置 (保持不变)
    point_encoder:
      output_dim: 128
      layers: [32, 64]

    # 图神经网络模块配置
    gnn:
      # --- 为图Transformer新增的配置参数 ---
      gt_layers: 3      # Graph Transformer的层数
      gt_heads: 4       # Graph Transformer的注意力头数
      
      # --- 原GAT和DGCNN的参数 (可保留或删除，此处为兼容性保留) ---
      k: 10
      gat_layers: 3

      # --- 最终输出维度 (保持不变) ---
      proj_dim: 64

  # 关系判别器配置 (保持不变)
  relation_classifier:
    input_dim: 128
    hidden_dims: [256, 128]
    output_dim: 1
    use_bn: false
    dropout_rate: 0.5

# ---------------------------------------------------------------------------- #
# 训练与数据配置
# ---------------------------------------------------------------------------- #
train:
  # 优化器配置 (保持不变)
  optimizer:
    type: 'Adam'
    base_lr: 0.001
    weight_decay: 0.0001
    betas: [0.9, 0.999]
    eps: 0.00000001

  # 学习率调度器配置 (保持不变)
  lr_scheduler:
    type: 'StepLR'
    decay_step: 50
    decay_gamma: 0.5

  # 损失函数权重 (保持不变)
  loss:
    point_loss_weight: 100.0
    line_loss_weight: 1.0

  # 训练过程配置 (保持不变)
  num_epochs: 200
  num_workers: 4
  batch_size: 24
  val_freq: 1
  disp_freq: 10
  vis_freq: 100
  checkpoint_freq: 1
  use_gt_points: false

# 数据集配置 (保持不变)
dataset:
  train:
    type: 'ps_dataset'
    data_path: 'data/ps2.0/train.txt'
    img_size: [600, 600]
    pre_processes:
      - type: 'resize'
        args:
          size: [600, 600]
      - type: 'normalize'
        args:
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]

  val:
    type: 'ps_dataset'
    data_path: 'data/ps2.0/test.txt'
    img_size: [600, 600]
    pre_processes:
      - type: 'resize'
        args:
          size: [600, 600]
      - type: 'normalize'
        args:
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
